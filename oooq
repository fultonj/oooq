# Filename:                oooq.sh
# Description:             Help me connect to oooq hosts
# Time-stamp:              <2018-01-19 14:35:53 fultonj> 
# -------------------------------------------------------
# I have N centos systems hosting tripleo-quickstart:
# - fultonj@ceph-osp1.cloud.lab.eng.bos.redhat.com
# - fultonj@ceph-osp2.cloud.lab.eng.bos.redhat.com
# - jfulton@192.168.1.50
# This script helps me do the following with them:
# - ssh into their hypervisors
# - ssh into their undercloud (hosted on the hypervisors)
# - set up an ssh tunnel to their undercloud
# - make entries for .emacs so tramp can use the tunnel
# (Would have been better if bash4 had lists of hashes)
# -------------------------------------------------------
if [ "$1" != "" ]; then
    case "$1" in
	"1")
	    user=fultonj
	    hypervisor=ceph-osp1.cloud.lab.eng.bos.redhat.com
	    port=4444
	    ;;
	"2")
	    user=fultonj
	    hypervisor=ceph-osp2.cloud.lab.eng.bos.redhat.com
	    port=5555
	    ;;
	"3")
	    user=jfulton
	    hypervisor=192.168.1.50
	    port=2222
	    ;;
	*)
	    echo "$1 is not a valid option"
	    exit 1
	    ;;
    esac
    host=$(echo $hypervisor | awk 'BEGIN { FS = "." } ; { print $1 }')
else
    echo "You must specify the number of the host you want to connect to:"
    echo "  1 -> osp1"
    echo "  2 -> osp2"
    echo "  3 -> orthanc"
    exit 1
fi

function ssh_hyper() {
    ssh -A $user@$hypervisor
}

function ssh_under() {
    # just when it couldn't get any worse...
    cat /dev/null > /tmp/expect
    echo '#!/usr/bin/expect -f' >> /tmp/expect
    echo "spawn ssh -t -A $user@$hypervisor" >> /tmp/expect
    echo "expect \"\[$user@$host ~\]\$\"" >> /tmp/expect
    echo 'send "~/oooq/under\r"' >> /tmp/expect
    echo 'interact' >> /tmp/expect
    chmod 700 /tmp/expect
    /tmp/expect
}

function tunnel() {
    # kill existing tunnels on $port
    for pid in $(ps axu | grep $port | grep -v grep | awk {'print $2'}); do
	kill $pid
    done
    # remove old entries in ~/.ssh/known_hosts
    grep -n localhost ~/.ssh/known_hosts | grep $port | awk {'print $1'} | awk 'BEGIN { FS = ":" } ; { print $1 }' > /tmp/tunnel-lines
    for i in $(cat /tmp/tunnel-lines); do
	opt='d'
	cmd=$i$opt
	sed -i $cmd ~/.ssh/known_hosts
    done
    cmd="grep ProxyCommand .quickstart/ssh.config.ansible | tail -1  | awk {'print \$13'}"
    undercloud_port=$(ssh $user@$hypervisor $cmd) # e.g. 1.2.3.4:22
    echo 
    echo "Tunneling from localhost:$port to undercloud:22 via $hypervisor"
    ssh -f -L $port:$undercloud_port -N $hypervisor -l $user
    echo " ssh stack@localhost -p $port"
}

function tramp() {
    echo "(setenv \"$host\" \"/ssh:stack@localhost#$port:/home/stack/\")"
}

function help_verb() {
    echo "You must specify one of the following as a second argument:"
    echo " under  - ssh into the undercloud hosted on $host"
    echo " tunnel - set up an ssh tunnel to the undercloud hosted on $host"
    echo " hyper  - ssh into $host"
    echo " emacs  - print a .emacs line to use tramp to use the above ssh tunnel"
    exit 1
}

case "$2" in
  "under")
    ssh_under
    ;;
  "hyper")
      ssh_hyper
    ;;
  "tunnel")
      tunnel
    ;;
  "emacs")
      tramp
    ;;
  *)
      help_verb
    ;;
esac
